{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\Desktop\\\\Resume_Analyser\\\\Resume_Analyser\\\\Frontend\\\\src\\\\components\\\\UploadForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { analyzeFile } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UploadForm({\n  onUploadComplete\n}) {\n  _s();\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [err, setErr] = useState(\"\");\n  const onSubmit = async e => {\n    e.preventDefault();\n    if (!file) {\n      setErr(\"Please select a PDF or DOCX file.\");\n      return;\n    }\n    if (![\"application/pdf\", \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"].includes(file.type)) {\n      setErr(\"Only PDF or DOCX files are allowed.\");\n      return;\n    }\n    setErr(\"\");\n    setLoading(true);\n    try {\n      const result = await analyzeFile(file);\n      onUploadComplete(result);\n      window.scrollTo({\n        top: document.body.scrollHeight,\n        behavior: \"smooth\"\n      });\n    } catch (e) {\n      setErr(e.message || \"Failed to analyze resume.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        className: \"form-control\",\n        accept: \".pdf,.docx\",\n        onChange: e => {\n          var _e$target$files;\n          return setFile(((_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0]) || null);\n        },\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? \"Analyzing...\" : \"Analyze\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), file && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-2 text-muted\",\n      children: [\"Selected: \", file.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 16\n    }, this), err && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger mt-3\",\n      children: err\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadForm, \"f2fg7o2CzL5kdrn2isWM/1jNMgE=\");\n_c = UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useState","analyzeFile","jsxDEV","_jsxDEV","UploadForm","onUploadComplete","_s","file","setFile","loading","setLoading","err","setErr","onSubmit","e","preventDefault","includes","type","result","window","scrollTo","top","document","body","scrollHeight","behavior","message","children","className","accept","onChange","_e$target$files","target","files","disabled","fileName","_jsxFileName","lineNumber","columnNumber","name","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/OneDrive/Desktop/Resume_Analyser/Resume_Analyser/Frontend/src/components/UploadForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { analyzeFile } from \"../services/api\";\r\n\r\nexport default function UploadForm({ onUploadComplete }) {\r\n  const [file, setFile] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [err, setErr] = useState(\"\");\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!file) {\r\n      setErr(\"Please select a PDF or DOCX file.\");\r\n      return;\r\n    }\r\n    if (![\"application/pdf\", \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"].includes(file.type)) {\r\n      setErr(\"Only PDF or DOCX files are allowed.\");\r\n      return;\r\n    }\r\n\r\n    setErr(\"\");\r\n    setLoading(true);\r\n    try {\r\n      const result = await analyzeFile(file);\r\n      onUploadComplete(result);\r\n      window.scrollTo({ top: document.body.scrollHeight, behavior: \"smooth\" });\r\n    } catch (e) {\r\n      setErr(e.message || \"Failed to analyze resume.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <div className=\"input-group\">\r\n        <input\r\n          type=\"file\"\r\n          className=\"form-control\"\r\n          accept=\".pdf,.docx\"\r\n          onChange={(e) => setFile(e.target.files?.[0] || null)}\r\n          disabled={loading}\r\n        />\r\n        <button className=\"btn btn-primary\" type=\"submit\" disabled={loading}>\r\n          {loading ? \"Analyzing...\" : \"Analyze\"}\r\n        </button>\r\n      </div>\r\n\r\n      {file && <div className=\"mt-2 text-muted\">Selected: {file.name}</div>}\r\n      {err && <div className=\"alert alert-danger mt-3\">{err}</div>}\r\n    </form>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}