{"ast":null,"code":"const API_BASE = process.env.REACT_APP_API || \"http://localhost:8000\";\nasync function request(url, options = {}) {\n  const res = await fetch(`${API_BASE}${url}`, options);\n  const ct = res.headers.get(\"content-type\") || \"\";\n  const isJSON = ct.includes(\"application/json\");\n  const payload = isJSON ? await res.json() : await res.text();\n  if (!res.ok) {\n    const msg = isJSON ? (payload === null || payload === void 0 ? void 0 : payload.detail) || (payload === null || payload === void 0 ? void 0 : payload.error) : payload;\n    throw new Error(msg || \"API Error\");\n  }\n  return payload;\n}\n\n// Add this to your api.js\nexport async function analyzeWithJD(resumeFile, jdFile) {\n  const form = new FormData();\n  form.append(\"resume_file\", resumeFile);\n  form.append(\"jd_file\", jdFile);\n  return request(\"/analyze-with-jd\", {\n    method: \"POST\",\n    body: form\n  });\n}\nexport async function analyzeFile(file) {\n  const form = new FormData();\n  form.append(\"file\", file);\n  return request(\"/analyze\", {\n    method: \"POST\",\n    body: form\n  });\n}\nexport async function health() {\n  return request(\"/health\");\n}","map":{"version":3,"names":["API_BASE","process","env","REACT_APP_API","request","url","options","res","fetch","ct","headers","get","isJSON","includes","payload","json","text","ok","msg","detail","error","Error","analyzeWithJD","resumeFile","jdFile","form","FormData","append","method","body","analyzeFile","file","health"],"sources":["C:/Users/nisha/OneDrive/Desktop/Resume_Analyser/Frontend/src/services/api.js"],"sourcesContent":["const API_BASE = process.env.REACT_APP_API || \"http://localhost:8000\";\r\n\r\nasync function request(url, options = {}) {\r\n  const res = await fetch(`${API_BASE}${url}`, options);\r\n  const ct = res.headers.get(\"content-type\") || \"\";\r\n  const isJSON = ct.includes(\"application/json\");\r\n  const payload = isJSON ? await res.json() : await res.text();\r\n\r\n  if (!res.ok) {\r\n    const msg = isJSON ? payload?.detail || payload?.error : payload;\r\n    throw new Error(msg || \"API Error\");\r\n  }\r\n  return payload;\r\n}\r\n\r\n// Add this to your api.js\r\nexport async function analyzeWithJD(resumeFile, jdFile) {\r\n  const form = new FormData();\r\n  form.append(\"resume_file\", resumeFile);\r\n  form.append(\"jd_file\", jdFile);\r\n  return request(\"/analyze-with-jd\", { method: \"POST\", body: form });\r\n}\r\nexport async function analyzeFile(file) {\r\n  const form = new FormData();\r\n  form.append(\"file\", file);\r\n  return request(\"/analyze\", { method: \"POST\", body: form });\r\n}\r\n\r\nexport async function health() {\r\n  return request(\"/health\");\r\n}\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,aAAa,IAAI,uBAAuB;AAErE,eAAeC,OAAOA,CAACC,GAAG,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;EACxC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGR,QAAQ,GAAGK,GAAG,EAAE,EAAEC,OAAO,CAAC;EACrD,MAAMG,EAAE,GAAGF,GAAG,CAACG,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC,IAAI,EAAE;EAChD,MAAMC,MAAM,GAAGH,EAAE,CAACI,QAAQ,CAAC,kBAAkB,CAAC;EAC9C,MAAMC,OAAO,GAAGF,MAAM,GAAG,MAAML,GAAG,CAACQ,IAAI,CAAC,CAAC,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;EAE5D,IAAI,CAACT,GAAG,CAACU,EAAE,EAAE;IACX,MAAMC,GAAG,GAAGN,MAAM,GAAG,CAAAE,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEK,MAAM,MAAIL,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEM,KAAK,IAAGN,OAAO;IAChE,MAAM,IAAIO,KAAK,CAACH,GAAG,IAAI,WAAW,CAAC;EACrC;EACA,OAAOJ,OAAO;AAChB;;AAEA;AACA,OAAO,eAAeQ,aAAaA,CAACC,UAAU,EAAEC,MAAM,EAAE;EACtD,MAAMC,IAAI,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC3BD,IAAI,CAACE,MAAM,CAAC,aAAa,EAAEJ,UAAU,CAAC;EACtCE,IAAI,CAACE,MAAM,CAAC,SAAS,EAAEH,MAAM,CAAC;EAC9B,OAAOpB,OAAO,CAAC,kBAAkB,EAAE;IAAEwB,MAAM,EAAE,MAAM;IAAEC,IAAI,EAAEJ;EAAK,CAAC,CAAC;AACpE;AACA,OAAO,eAAeK,WAAWA,CAACC,IAAI,EAAE;EACtC,MAAMN,IAAI,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC3BD,IAAI,CAACE,MAAM,CAAC,MAAM,EAAEI,IAAI,CAAC;EACzB,OAAO3B,OAAO,CAAC,UAAU,EAAE;IAAEwB,MAAM,EAAE,MAAM;IAAEC,IAAI,EAAEJ;EAAK,CAAC,CAAC;AAC5D;AAEA,OAAO,eAAeO,MAAMA,CAAA,EAAG;EAC7B,OAAO5B,OAAO,CAAC,SAAS,CAAC;AAC3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}